<#
.SYNOPSIS
    Prepares Bitburner scripts for GitHub upload by flattening directory structure.

.DESCRIPTION
    This script copies all .js files from the organized folder structure into a single
    directory ready for GitHub upload. This is necessary because Bitburner doesn't
    support folder structures in-game.

.PARAMETER OutputPath
    Path where flattened scripts will be copied. Defaults to ".\bitburner-github"

.PARAMETER IncludeReadme
    If specified, also copies README.md and other documentation

.EXAMPLE
    .\Prepare-GitHubUpload.ps1
    Creates bitburner-github folder with all scripts

.EXAMPLE
    .\Prepare-GitHubUpload.ps1 -OutputPath "C:\Upload" -IncludeReadme
    Creates custom output folder and includes README
#>

param(
    [string]$OutputPath = ".\bitburner-github",
    [switch]$IncludeReadme
)

# Script directories to scan
$scriptDirs = @(
    "core",
    "batch", 
    "analysis",
    "utils",
    "deploy"
)

Write-Host "`n=== Bitburner GitHub Preparation ===" -ForegroundColor Cyan
Write-Host "Output directory: $OutputPath`n" -ForegroundColor Yellow

# Create output directory
if (Test-Path $OutputPath) {
    Write-Host "Output directory exists. Cleaning..." -ForegroundColor Yellow
    Remove-Item "$OutputPath\*.js" -ErrorAction SilentlyContinue
} else {
    Write-Host "Creating output directory..." -ForegroundColor Green
    New-Item -ItemType Directory -Path $OutputPath | Out-Null
}

# Copy all .js files from organized directories
$totalCopied = 0
$errors = 0

foreach ($dir in $scriptDirs) {
    if (Test-Path $dir) {
        Write-Host "Processing $dir/ directory..." -ForegroundColor Cyan
        
        $files = Get-ChildItem -Path $dir -Filter "*.js" -File
        foreach ($file in $files) {
            try {
                Copy-Item -Path $file.FullName -Destination $OutputPath -Force
                Write-Host "  âœ“ $($file.Name)" -ForegroundColor Green
                $totalCopied++
            } catch {
                Write-Host "  âœ— $($file.Name) - Error: $_" -ForegroundColor Red
                $errors++
            }
        }
    } else {
        Write-Host "Warning: $dir/ directory not found" -ForegroundColor Yellow
    }
}

# Copy update script
if (Test-Path "bitburner-update.js") {
    Copy-Item "bitburner-update.js" -Destination $OutputPath -Force
    Write-Host "`n  âœ“ bitburner-update.js (update script)" -ForegroundColor Green
    $totalCopied++
}

# Copy documentation if requested
if ($IncludeReadme) {
    Write-Host "`nCopying documentation..." -ForegroundColor Cyan
    
    $docsToInclude = @(
        "README.md",
        "QUICK_REFERENCE.md"
    )
    
    foreach ($doc in $docsToInclude) {
        if (Test-Path $doc) {
            Copy-Item $doc -Destination $OutputPath -Force
            Write-Host "  âœ“ $doc" -ForegroundColor Green
        }
    }
}

# Create a .gitignore file
$gitignoreContent = @"
# Bitburner scripts repository
# Generated by Prepare-GitHubUpload.ps1

# Don't track these
*.log
*.bak
.DS_Store
Thumbs.db

# Keep these
!*.js
!README.md
!QUICK_REFERENCE.md
"@

Set-Content -Path "$OutputPath\.gitignore" -Value $gitignoreContent
Write-Host "`n  âœ“ .gitignore created" -ForegroundColor Green

# Create a setup instructions file
$setupContent = @"
# Bitburner Scripts - GitHub Upload

This folder contains all your Bitburner scripts ready for GitHub upload.

## Next Steps:

1. **Create GitHub Repository**
   - Go to https://github.com/new
   - Name: bitburner-scripts
   - Visibility: Private (recommended) or Public
   - Don't initialize with README
   - Click "Create repository"

2. **Upload Files**
   - Drag and drop all .js files from this folder to GitHub
   - Or use Git command line (see GitHub's instructions)

3. **Configure Update Script**
   - Open bitburner-update.js in this folder
   - Find line 14: const baseUrl = "..."
   - Replace with your GitHub raw URL
   - Save and re-upload to GitHub

4. **Your GitHub Raw URL Format**
   https://raw.githubusercontent.com/YOUR_USERNAME/bitburner-scripts/main

5. **In Bitburner Game**
   - Copy bitburner-update.js into the game
   - Run: run bitburner-update.js --all
   - All scripts will download automatically!

## Files Included:

Total Scripts: $totalCopied
Update Script: bitburner-update.js
Documentation: $(if ($IncludeReadme) {"Included"} else {"Not included (use -IncludeReadme)"})

## For Detailed Instructions:

See: docs/GITHUB_DEPLOYMENT_GUIDE.md in your original project folder

Happy hacking! ðŸš€
"@

Set-Content -Path "$OutputPath\SETUP_INSTRUCTIONS.txt" -Value $setupContent
Write-Host "  âœ“ SETUP_INSTRUCTIONS.txt created" -ForegroundColor Green

# Summary
Write-Host "`n=== Summary ===" -ForegroundColor Cyan
Write-Host "Scripts copied: $totalCopied" -ForegroundColor Green
if ($errors -gt 0) {
    Write-Host "Errors: $errors" -ForegroundColor Red
}
Write-Host "Output location: $OutputPath" -ForegroundColor Yellow
Write-Host "`nNext Steps:" -ForegroundColor Cyan
Write-Host "1. Review files in: $OutputPath" -ForegroundColor White
Write-Host "2. Read: $OutputPath\SETUP_INSTRUCTIONS.txt" -ForegroundColor White
Write-Host "3. Upload to GitHub" -ForegroundColor White
Write-Host "4. Configure bitburner-update.js with your GitHub URL" -ForegroundColor White
Write-Host "5. See docs/GITHUB_DEPLOYMENT_GUIDE.md for detailed instructions`n" -ForegroundColor White

# Open output folder
if ($Host.Name -eq "ConsoleHost") {
    $response = Read-Host "Open output folder now? (y/n)"
    if ($response -eq 'y') {
        Start-Process $OutputPath
    }
}
